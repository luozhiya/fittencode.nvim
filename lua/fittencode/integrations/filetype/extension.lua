--[[

对原有 nvim\runtime\lua\vim\filetype.lua 的修改：
- 删除 function 映射
- 简化逻辑，因为从 FittenCode 已经判断过一次类型了，以 FittenCode 类型为最大信度

- `:%s/detect\.\([a-zA-z0-9])\+\)/'\1'/g`

]]

---@diagnostic disable: unused-local
---@type vim.filetype.mapping
local extension = {
    -- BEGIN EXTENSION
    ['8th'] = '8th',
    a65 = 'a65',
    aap = 'aap',
    abap = 'abap',
    abc = 'abc',
    abl = 'abel',
    abnf = 'abnf',
    wrm = 'acedb',
    ads = 'ada',
    ada = 'ada',
    gpr = 'ada',
    adb = 'ada',
    tdf = 'ahdl',
    aidl = 'aidl',
    aml = 'aml',
    run = 'ampl',
    g4 = 'antlr4',
    scpt = 'applescript',
    ino = 'arduino',
    pde = 'arduino',
    art = 'art',
    asciidoc = 'asciidoc',
    adoc = 'asciidoc',
    asa = function(_path, _bufnr)
        if vim.g.filetype_asa then
            return vim.g.filetype_asa
        end
        return 'aspvbs'
    end,
    asm = 'asm',
    s = 'asm',
    S = 'asm',
    a = 'asm',
    A = 'asm',
    lst = 'asm',
    mac = 'asm',
    asn1 = 'asn',
    asn = 'asn',
    asp = 'asp',
    astro = 'astro',
    asy = 'asy',
    atl = 'atlas',
    as = 'atlas',
    zed = 'authzed',
    ahk = 'autohotkey',
    au3 = 'autoit',
    ave = 'ave',
    gawk = 'awk',
    awk = 'awk',
    ref = 'b',
    imp = 'b',
    mch = 'b',
    bas = 'bas',
    bass = 'bass',
    bi = 'bas',
    bm = 'bas',
    bc = 'bc',
    bdf = 'bdf',
    beancount = 'beancount',
    bib = 'bib',
    com = detect_seq('bindzone', 'dcl'),
    db = 'bindzone',
    bicep = 'bicep',
    bicepparam = 'bicep',
    zone = 'bindzone',
    bb = 'bitbake',
    bbappend = 'bitbake',
    bbclass = 'bitbake',
    bl = 'blank',
    blp = 'blueprint',
    bp = 'bp',
    bs = 'brighterscript',
    brs = 'brightscript',
    bsd = 'bsdl',
    bsdl = 'bsdl',
    bst = 'bst',
    btm = function(_path, _bufnr)
        return (vim.g.dosbatch_syntax_for_btm and vim.g.dosbatch_syntax_for_btm ~= 0) and 'dosbatch'
            or 'btm'
    end,
    bzl = 'bzl',
    bazel = 'bzl',
    BUILD = 'bzl',
    mdh = 'c',
    epro = 'c',
    qc = 'c',
    c3 = 'c3',
    c3i = 'c3',
    c3t = 'c3',
    cabal = 'cabal',
    cairo = 'cairo',
    capnp = 'capnp',
    cdc = 'cdc',
    cdl = 'cdl',
    toc = detect_line1('\\contentsline', 'tex', 'cdrtoc'),
    cedar = 'cedar',
    cfc = 'cf',
    cfm = 'cf',
    cfi = 'cf',
    hgrc = 'cfg',
    cfg = 'cfg',
    Cfg = 'cfg',
    CFG = 'cfg',
    chf = 'ch',
    chai = 'chaiscript',
    ch = 'change',
    chs = 'chaskell',
    chatito = 'chatito',
    chopro = 'chordpro',
    crd = 'chordpro',
    crdpro = 'chordpro',
    cho = 'chordpro',
    chordpro = 'chordpro',
    ck = 'chuck',
    cl = 'cl',
    eni = 'cl',
    icl = 'clean',
    cljx = 'clojure',
    clj = 'clojure',
    cljc = 'clojure',
    cljs = 'clojure',
    cook = 'cook',
    cmake = 'cmake',
    cmod = 'cmod',
    cob = 'cobol',
    cbl = 'cobol',
    atg = 'coco',
    recipe = 'conaryrecipe',
    ctags = 'conf',
    hook = function(_path, bufnr)
        return M._getline(bufnr, 1) == '[Trigger]' and 'confini' or nil
    end,
    nmconnection = 'confini',
    mklx = 'context',
    mkiv = 'context',
    mkii = 'context',
    mkxl = 'context',
    mkvi = 'context',
    control = 'control',
    copyright = 'copyright',
    corn = 'corn',
    csh = 'csh',
    cpon = 'cpon',
    moc = 'cpp',
    hh = 'cpp',
    tlh = 'cpp',
    inl = 'cpp',
    ipp = 'cpp',
    ['c++'] = 'cpp',
    C = 'cpp',
    cxx = 'cpp',
    H = 'cpp',
    tcc = 'cpp',
    hxx = 'cpp',
    hpp = 'cpp',
    ixx = 'cpp',
    mpp = 'cpp',
    ccm = 'cpp',
    cppm = 'cpp',
    cxxm = 'cpp',
    ['c++m'] = 'cpp',
    cpp = 'cpp',
    cc = 'cpp',
    cql = 'cqlang',
    crm = 'crm',
    cr = 'crystal',
    cake = 'cs',
    csx = 'cs',
    cs = 'cs',
    csc = 'csc',
    csdl = 'csdl',
    cshtml = 'html',
    fdr = 'csp',
    csp = 'csp',
    css = 'css',
    csv = 'csv',
    con = 'cterm',
    feature = 'cucumber',
    cuh = 'cuda',
    cu = 'cuda',
    cue = 'cue',
    pld = 'cupl',
    si = 'cuplsim',
    cyn = 'cynpp',
    cypher = 'cypher',
    dfy = 'dafny',
    dart = 'dart',
    drt = 'dart',
    ds = 'datascript',
    dat = 'dat',
    Dat = 'dat',
    DAT = 'dat',
    dax = 'dax',
    dcd = 'dcd',
    decl = 'decl',
    dec = 'decl',
    dcl = detect_seq('decl', 'clean'),
    def = 'def',
    desc = 'desc',
    directory = 'desktop',
    desktop = 'desktop',
    dhall = 'dhall',
    diff = 'diff',
    rej = 'diff',
    Dockerfile = 'dockerfile',
    dockerfile = 'dockerfile',
    bat = 'dosbatch',
    wrap = 'dosini',
    ini = 'dosini',
    INI = 'dosini',
    vbp = 'dosini',
    dot = 'dot',
    gv = 'dot',
    drac = 'dracula',
    drc = 'dracula',
    lvs = 'dracula',
    lpe = 'dracula',
    dsp = 'dsp',
    dtd = 'dtd',
    d = 'dtrace',
    dts = 'dts',
    dtsi = 'dts',
    dtso = 'dts',
    its = 'dts',
    keymap = 'dts',
    overlay = 'dts',
    dylan = 'dylan',
    intr = 'dylanintr',
    lid = 'dylanlid',
    e = 'e',
    E = 'e',
    ecd = 'ecd',
    edf = 'edif',
    edif = 'edif',
    edo = 'edif',
    edn = 'edn',
    eex = 'eelixir',
    leex = 'eelixir',
    am = 'elf',
    exs = 'elixir',
    elm = 'elm',
    lc = 'elsa',
    elv = 'elvish',
    ent = 'ent',
    epp = 'epuppet',
    erl = 'erlang',
    hrl = 'erlang',
    yaws = 'erlang',
    erb = 'eruby',
    rhtml = 'eruby',
    esdl = 'esdl',
    ec = 'esqlc',
    EC = 'esqlc',
    strl = 'esterel',
    eu = 'euphoria',
    EU = 'euphoria',
    ew = 'euphoria',
    EW = 'euphoria',
    EX = 'euphoria',
    exu = 'euphoria',
    EXU = 'euphoria',
    exw = 'euphoria',
    EXW = 'euphoria',
    ex = 'ex',
    exp = 'expect',
    f = 'f',
    factor = 'factor',
    fal = 'falcon',
    fan = 'fan',
    fwt = 'fan',
    lib = 'faust',
    fnl = 'fennel',
    m4gl = 'fgl',
    ['4gl'] = 'fgl',
    ['4gh'] = 'fgl',
    fir = 'firrtl',
    fish = 'fish',
    focexec = 'focexec',
    fex = 'focexec',
    ft = 'forth',
    fth = 'forth',
    ['4th'] = 'forth',
    FOR = 'fortran',
    f77 = 'fortran',
    f03 = 'fortran',
    fortran = 'fortran',
    F95 = 'fortran',
    f90 = 'fortran',
    F03 = 'fortran',
    fpp = 'fortran',
    FTN = 'fortran',
    ftn = 'fortran',
    ['for'] = 'fortran',
    F90 = 'fortran',
    F77 = 'fortran',
    f95 = 'fortran',
    FPP = 'fortran',
    F = 'fortran',
    F08 = 'fortran',
    f08 = 'fortran',
    fpc = 'fpcmake',
    fsl = 'framescript',
    frm = 'frm',
    fb = 'freebasic',
    fs = 'fs',
    fsh = 'fsh',
    fsi = 'fsharp',
    fsx = 'fsharp',
    fc = 'func',
    fusion = 'fusion',
    gdb = 'gdb',
    gdmo = 'gdmo',
    mo = 'gdmo',
    tscn = 'gdresource',
    tres = 'gdresource',
    gd = 'gdscript',
    gdshader = 'gdshader',
    shader = 'gdshader',
    ged = 'gedcom',
    gel = 'gel',
    gmi = 'gemtext',
    gemini = 'gemtext',
    gift = 'gift',
    prettierignore = 'gitignore',
    gleam = 'gleam',
    vert = 'glsl',
    tesc = 'glsl',
    tese = 'glsl',
    glsl = 'glsl',
    geom = 'glsl',
    frag = 'glsl',
    comp = 'glsl',
    rgen = 'glsl',
    rmiss = 'glsl',
    rchit = 'glsl',
    rahit = 'glsl',
    rint = 'glsl',
    rcall = 'glsl',
    gn = 'gn',
    gni = 'gn',
    gnuplot = 'gnuplot',
    gpi = 'gnuplot',
    go = 'go',
    gp = 'gp',
    gs = 'grads',
    gql = 'graphql',
    graphql = 'graphql',
    graphqls = 'graphql',
    gretl = 'gretl',
    gradle = 'groovy',
    groovy = 'groovy',
    gsp = 'gsp',
    gjs = 'javascript.glimmer',
    gts = 'typescript.glimmer',
    gyp = 'gyp',
    gypi = 'gyp',
    hack = 'hack',
    hackpartial = 'hack',
    haml = 'haml',
    hsm = 'hamster',
    hbs = 'handlebars',
    ha = 'hare',
    ['hs-boot'] = 'haskell',
    hsig = 'haskell',
    hsc = 'haskell',
    hs = 'haskell',
    persistentmodels = 'haskellpersistent',
    ht = 'haste',
    htpp = 'hastepreproc',
    hcl = 'hcl',
    hb = 'hb',
    h = 'header',
    sum = 'hercules',
    errsum = 'hercules',
    ev = 'hercules',
    vc = 'hercules',
    heex = 'heex',
    hex = 'hex',
    ['a43'] = 'hex',
    ['a90'] = 'hex',
    ['h32'] = 'hex',
    ['h80'] = 'hex',
    ['h86'] = 'hex',
    ihex = 'hex',
    ihe = 'hex',
    ihx = 'hex',
    int = 'hex',
    mcs = 'hex',
    hjson = 'hjson',
    m3u = 'hlsplaylist',
    m3u8 = 'hlsplaylist',
    hog = 'hog',
    hws = 'hollywood',
    hoon = 'hoon',
    cpt = 'html',
    dtml = 'html',
    htm = 'html',
    html = 'html',
    pt = 'html',
    shtml = 'html',
    stm = 'html',
    htt = 'httest',
    htb = 'httest',
    http = 'http',
    hurl = 'hurl',
    hw = 'hw',
    module = 'hw',
    pkg = 'hw',
    hy = 'hy',
    iba = 'ibasic',
    ibi = 'ibasic',
    icn = 'icon',
    idl = 'idl',
    idr = 'idris2',
    inc = 'inc',
    inf = 'inform',
    INF = 'inform',
    ii = 'initng',
    inko = 'inko',
    inp = 'inp',
    ms = detect_seq('nroff', 'xmath'),
    ipkg = 'ipkg',
    iss = 'iss',
    mst = 'ist',
    ist = 'ist',
    ijs = 'j',
    JAL = 'jal',
    jal = 'jal',
    jpr = 'jam',
    jpl = 'jam',
    janet = 'janet',
    jav = 'java',
    java = 'java',
    jsh = 'java',
    jj = 'javacc',
    jjt = 'javacc',
    es = 'javascript',
    mjs = 'javascript',
    javascript = 'javascript',
    js = 'javascript',
    jsm = 'javascript',
    cjs = 'javascript',
    jsx = 'javascriptreact',
    clp = 'jess',
    jgr = 'jgraph',
    jinja = 'jinja',
    jjdescription = 'jjdescription',
    j73 = 'jovial',
    jov = 'jovial',
    jovial = 'jovial',
    properties = 'jproperties',
    jq = 'jq',
    slnf = 'json',
    json = 'json',
    jsonp = 'json',
    geojson = 'json',
    mcmeta = 'json',
    webmanifest = 'json',
    ipynb = 'json',
    ['jupyterlab-settings'] = 'json',
    ['sublime-project'] = 'json',
    ['sublime-settings'] = 'json',
    ['sublime-workspace'] = 'json',
    ['json-patch'] = 'json',
    bd = 'json',
    bda = 'json',
    xci = 'json',
    json5 = 'json5',
    jsonc = 'jsonc',
    jsonl = 'jsonl',
    jsonnet = 'jsonnet',
    libsonnet = 'jsonnet',
    jsp = 'jsp',
    jl = 'julia',
    just = 'just',
    Just = 'just',
    JUST = 'just',
    kl = 'karel',
    KL = 'karel',
    kdl = 'kdl',
    kv = 'kivy',
    kix = 'kix',
    kts = 'kotlin',
    kt = 'kotlin',
    ktm = 'kotlin',
    sub = 'krl',
    Sub = 'krl',
    SUB = 'krl',
    ks = 'kscript',
    k = 'kwt',
    ACE = 'lace',
    ace = 'lace',
    lalrpop = 'lalrpop',
    latte = 'latte',
    lte = 'latte',
    ld = 'ld',
    ldif = 'ldif',
    lean = 'lean',
    journal = 'ledger',
    ldg = 'ledger',
    ledger = 'ledger',
    leo = 'leo',
    less = 'less',
    lex = 'lex',
    lxx = 'lex',
    ['l++'] = 'lex',
    l = 'lex',
    lhs = 'lhaskell',
    lidr = 'lidris2',
    ly = 'lilypond',
    ily = 'lilypond',
    liquid = 'liquid',
    liq = 'liquidsoap',
    L = 'lisp',
    lisp = 'lisp',
    el = 'lisp',
    lsp = 'lisp',
    asd = 'lisp',
    lt = 'lite',
    lite = 'lite',
    livemd = 'livebook',
    ll = 'll',
    log = 'log',
    Log = 'log',
    LOG = 'log',
    lgt = 'logtalk',
    lotos = 'lotos',
    lot = detect_line1('\\contentsline', 'tex', 'lotos'),
    lout = 'lout',
    lou = 'lout',
    ulpc = 'lpc',
    lpc = 'lpc',
    c = 'lpc',
    lsl = 'lsl',
    lss = 'lss',
    nse = 'lua',
    rockspec = 'lua',
    lua = 'lua',
    tlu = 'lua',
    luau = 'luau',
    lrc = 'lyrics',
    m = 'm',
    at = 'm4',
    mc = 'mc',
    quake = 'm3quake',
    m4 = function(path, _bufnr)
        local pathl = path:lower()
        return not (pathl:find('html%.m4$') or pathl:find('fvwm2rc')) and 'm4' or nil
    end,
    eml = 'mail',
    mk = 'make',
    mak = 'make',
    page = 'mallard',
    map = detect_line1('^%*+$', 'lnkmap', 'map'),
    mws = 'maple',
    mpl = 'maple',
    mv = 'maple',
    mkdn = 'markdown',
    md = 'markdown',
    mdwn = 'markdown',
    mkd = 'markdown',
    markdown = 'markdown',
    mdown = 'markdown',
    masm = 'masm',
    mhtml = 'mason',
    mason = 'mason',
    master = 'master',
    mas = 'master',
    demo = 'maxima',
    dm1 = 'maxima',
    dm2 = 'maxima',
    dm3 = 'maxima',
    dmt = 'maxima',
    wxm = 'maxima',
    mbsyncrc = 'mbsync',
    mw = 'mediawiki',
    wiki = 'mediawiki',
    mel = 'mel',
    mmd = 'mermaid',
    mmdc = 'mermaid',
    mermaid = 'mermaid',
    mf = 'mf',
    mgl = 'mgl',
    mgp = 'mgp',
    my = 'mib',
    mib = 'mib',
    mix = 'mix',
    mixal = 'mix',
    mlir = 'mlir',
    mm = 'mm',
    nb = 'mma',
    wl = 'mma',
    mmp = 'mmp',
    mms = 'mms',
    mod = 'mod',
    Mod = 'mod',
    MOD = 'mod',
    DEF = 'modula2',
    m3 = 'modula3',
    i3 = 'modula3',
    mg = 'modula3',
    ig = 'modula3',
    lm3 = 'modula3',
    mojo = 'mojo',
    ['🔥'] = 'mojo', -- 🙄
    ssc = 'monk',
    monk = 'monk',
    tsc = 'monk',
    isc = 'monk',
    moo = 'moo',
    moon = 'moonscript',
    move = 'move',
    mp = 'mp',
    mpiv = 'mp',
    mpvi = 'mp',
    mpxl = 'mp',
    mof = 'msidl',
    odl = 'msidl',
    msql = 'msql',
    mss = 'mss',
    mu = 'mupad',
    mush = 'mush',
    mustache = 'mustache',
    mysql = 'mysql',
    n1ql = 'n1ql',
    nql = 'n1ql',
    nanorc = 'nanorc',
    nasm = 'nasm',
    NSA = 'natural',
    NSC = 'natural',
    NSG = 'natural',
    NSL = 'natural',
    NSM = 'natural',
    NSN = 'natural',
    NSP = 'natural',
    NSS = 'natural',
    ncf = 'ncf',
    nginx = 'nginx',
    nim = 'nim',
    nims = 'nim',
    nimble = 'nim',
    ninja = 'ninja',
    nix = 'nix',
    norg = 'norg',
    nqc = 'nqc',
    ['0'] = 'nroff',
    ['1'] = 'nroff',
    ['2'] = 'nroff',
    ['3'] = 'nroff',
    ['4'] = 'nroff',
    ['5'] = 'nroff',
    ['6'] = 'nroff',
    ['7'] = 'nroff',
    ['8'] = 'nroff',
    ['9'] = 'nroff',
    ['0p'] = 'nroff',
    ['1p'] = 'nroff',
    ['3p'] = 'nroff',
    ['1x'] = 'nroff',
    ['2x'] = 'nroff',
    ['3x'] = 'nroff',
    ['4x'] = 'nroff',
    ['5x'] = 'nroff',
    ['6x'] = 'nroff',
    ['7x'] = 'nroff',
    ['8x'] = 'nroff',
    ['3am'] = 'nroff',
    ['3perl'] = 'nroff',
    ['3pm'] = 'nroff',
    ['3posix'] = 'nroff',
    ['3type'] = 'nroff',
    n = 'nroff',
    roff = 'nroff',
    tmac = 'nroff',
    man = 'nroff',
    mom = 'nroff',
    nr = 'nroff',
    tr = 'nroff',
    nsi = 'nsis',
    nsh = 'nsis',
    nt = 'ntriples',
    nu = 'nu',
    obj = 'obj',
    objdump = 'objdump',
    cppobjdump = 'objdump',
    obl = 'obse',
    obse = 'obse',
    oblivion = 'obse',
    obscript = 'obse',
    mlt = 'ocaml',
    mly = 'ocaml',
    mll = 'ocaml',
    mlp = 'ocaml',
    mlip = 'ocaml',
    mli = 'ocaml',
    ml = 'ocaml',
    occ = 'occam',
    odin = 'odin',
    xom = 'omnimark',
    xin = 'omnimark',
    opam = 'opam',
    ['or'] = 'openroad',
    scad = 'openscad',
    ovpn = 'openvpn',
    opl = 'opl',
    opL = 'opl',
    oPl = 'opl',
    oPL = 'opl',
    Opl = 'opl',
    OpL = 'opl',
    OPl = 'opl',
    OPL = 'opl',
    ora = 'ora',
    org = 'org',
    org_archive = 'org',
    pandoc = 'pandoc',
    pdk = 'pandoc',
    pd = 'pandoc',
    pdc = 'pandoc',
    pxsl = 'papp',
    papp = 'papp',
    pxml = 'papp',
    pas = 'pascal',
    lpr = detect_line1('<%?xml', 'xml', 'pascal'),
    dpr = 'pascal',
    txtpb = 'pbtxt',
    textproto = 'pbtxt',
    textpb = 'pbtxt',
    pbtxt = 'pbtxt',
    g = 'pccts',
    pcmk = 'pcmk',
    pdf = 'pdf',
    pem = 'pem',
    cer = 'pem',
    crt = 'pem',
    csr = 'pem',
    plx = 'perl',
    prisma = 'prisma',
    psgi = 'perl',
    al = 'perl',
    ctp = 'php',
    php = 'php',
    phpt = 'php',
    php0 = 'php',
    php1 = 'php',
    php2 = 'php',
    php3 = 'php',
    php4 = 'php',
    php5 = 'php',
    php6 = 'php',
    php7 = 'php',
    php8 = 'php',
    php9 = 'php',
    phtml = 'php',
    theme = 'php',
    pike = 'pike',
    pmod = 'pike',
    rcp = 'pilrc',
    PL = 'pl',
    pli = 'pli',
    pl1 = 'pli',
    p36 = 'plm',
    plm = 'plm',
    pac = 'plm',
    plp = 'plp',
    pls = 'plsql',
    plsql = 'plsql',
    po = 'po',
    pot = 'po',
    pod = 'pod',
    filter = 'poefilter',
    pk = 'poke',
    pony = 'pony',
    ps = 'postscr',
    epsi = 'postscr',
    afm = 'postscr',
    epsf = 'postscr',
    eps = 'postscr',
    pfa = 'postscr',
    ai = 'postscr',
    pov = 'pov',
    ppd = 'ppd',
    it = 'ppwiz',
    ih = 'ppwiz',
    pq = 'pq',
    action = 'privoxy',
    prg = 'prg',
    Prg = 'prg',
    PRG = 'prg',
    pc = 'proc',
    pdb = 'prolog',
    pml = 'promela',
    proto = 'proto',
    prql = 'prql',
    psd1 = 'ps1',
    psm1 = 'ps1',
    ps1 = 'ps1',
    pssc = 'ps1',
    ps1xml = 'ps1xml',
    psf = 'psf',
    psl = 'psl',
    ptx = 'ptx',
    pug = 'pug',
    purs = 'purescript',
    arr = 'pyret',
    pxd = 'pyrex',
    pxi = 'pyrex',
    pyx = 'pyrex',
    ['pyx+'] = 'pyrex',
    pyw = 'python',
    py = 'python',
    pyi = 'python',
    ptl = 'python',
    ipy = 'python',
    ql = 'ql',
    qll = 'ql',
    qml = 'qml',
    qbs = 'qml',
    qmd = 'quarto',
    R = 'r',
    rkt = 'racket',
    rktd = 'racket',
    rktl = 'racket',
    rad = 'radiance',
    mat = 'radiance',
    pod6 = 'raku',
    rakudoc = 'raku',
    rakutest = 'raku',
    rakumod = 'raku',
    pm6 = 'raku',
    raku = 'raku',
    t6 = 'raku',
    p6 = 'raku',
    raml = 'raml',
    sysx = 'rapid',
    sysX = 'rapid',
    Sysx = 'rapid',
    SysX = 'rapid',
    SYSX = 'rapid',
    SYSx = 'rapid',
    modx = 'rapid',
    modX = 'rapid',
    Modx = 'rapid',
    ModX = 'rapid',
    MODX = 'rapid',
    MODx = 'rapid',
    rasi = 'rasi',
    rbs = 'rbs',
    rego = 'rego',
    rem = 'remind',
    remind = 'remind',
    pip = 'requirements',
    res = 'rescript',
    resi = 'rescript',
    frt = 'reva',
    testUnit = 'rexx',
    rex = 'rexx',
    orx = 'rexx',
    rexx = 'rexx',
    jrexx = 'rexx',
    rxj = 'rexx',
    rexxj = 'rexx',
    testGroup = 'rexx',
    rxo = 'rexx',
    Rd = 'rhelp',
    rd = 'rhelp',
    rib = 'rib',
    Rmd = 'rmd',
    rmd = 'rmd',
    smd = 'rmd',
    Smd = 'rmd',
    rnc = 'rnc',
    rng = 'rng',
    rnw = 'rnoweb',
    snw = 'rnoweb',
    Rnw = 'rnoweb',
    Snw = 'rnoweb',
    robot = 'robot',
    resource = 'robot',
    roc = 'roc',
    ron = 'ron',
    rsc = 'routeros',
    x = 'rpcgen',
    rpgle = 'rpgle',
    rpgleinc = 'rpgle',
    rpl = 'rpl',
    Srst = 'rrst',
    srst = 'rrst',
    Rrst = 'rrst',
    rrst = 'rrst',
    rst = 'rst',
    rtf = 'rtf',
    rjs = 'ruby',
    rxml = 'ruby',
    rb = 'ruby',
    rant = 'ruby',
    ru = 'ruby',
    rbw = 'ruby',
    gemspec = 'ruby',
    builder = 'ruby',
    rake = 'ruby',
    rs = 'rust',
    sa = 'sa',
    sage = 'sage',
    sls = 'salt',
    sas = 'sas',
    sass = 'sass',
    sbt = 'sbt',
    scala = 'scala',
    mill = 'scala',
    ss = 'scheme',
    scm = 'scheme',
    sld = 'scheme',
    stsg = 'scheme',
    sce = 'scilab',
    sci = 'scilab',
    scss = 'scss',
    sd = 'sd',
    sdc = 'sdc',
    pr = 'sdl',
    sdl = 'sdl',
    sed = 'sed',
    sexp = 'sexplib',
    bash = 'bash',
    bats = 'bash',
    cygport = 'bash',
    ebuild = 'bash',
    eclass = 'bash',
    env = 'sh',
    envrc = 'sh',
    ksh = 'ksh',
    sh = 'sh',
    lo = 'sh',
    la = 'sh',
    lai = 'sh',
    mdd = 'sh',
    slang = 'shaderslang',
    sieve = 'sieve',
    siv = 'sieve',
    sig = 'sig',
    sil = 'sil',
    sim = 'simula',
    s85 = 'sinda',
    sin = 'sinda',
    ssm = 'sisu',
    sst = 'sisu',
    ssi = 'sisu',
    ['_sst'] = 'sisu',
    ['-sst'] = 'sisu',
    il = 'skill',
    ils = 'skill',
    cdf = 'skill',
    sl = 'slang',
    ice = 'slice',
    slint = 'slint',
    score = 'slrnsc',
    sol = 'solidity',
    smali = 'smali',
    tpl = 'smarty',
    ihlp = 'smcl',
    smcl = 'smcl',
    hlp = 'smcl',
    smith = 'smith',
    smt = 'smith',
    smithy = 'smithy',
    sml = 'sml',
    smk = 'snakemake',
    spt = 'snobol4',
    sno = 'snobol4',
    sln = 'solution',
    sparql = 'sparql',
    rq = 'sparql',
    spec = 'spec',
    spice = 'spice',
    sp = 'spice',
    spd = 'spup',
    spdata = 'spup',
    speedup = 'spup',
    spi = 'spyce',
    spy = 'spyce',
    tyc = 'sql',
    typ = 'typ',
    pkb = 'sql',
    tyb = 'sql',
    pks = 'sql',
    sqlj = 'sqlj',
    sqi = 'sqr',
    sqr = 'sqr',
    nut = 'squirrel',
    src = 'src',
    Src = 'src',
    SRC = 'src',
    s28 = 'srec',
    s37 = 'srec',
    srec = 'srec',
    mot = 'srec',
    s19 = 'srec',
    srt = 'srt',
    ssa = 'ssa',
    ass = 'ssa',
    st = 'st',
    ipd = 'starlark',
    star = 'starlark',
    starlark = 'starlark',
    imata = 'stata',
    ['do'] = 'stata',
    mata = 'stata',
    ado = 'stata',
    stp = 'stp',
    styl = 'stylus',
    stylus = 'stylus',
    quark = 'supercollider',
    sface = 'surface',
    svelte = 'svelte',
    svg = 'svg',
    sw = 'sway',
    swift = 'swift',
    swiftinterface = 'swift',
    swig = 'swig',
    swg = 'swig',
    sys = 'sys',
    Sys = 'sys',
    SYS = 'sys',
    svh = 'systemverilog',
    sv = 'systemverilog',
    cmm = 'trace32',
    cmmt = 'trace32',
    t32 = 'trace32',
    td = 'tablegen',
    tak = 'tak',
    tal = 'tal',
    task = 'taskedit',
    tm = 'tcl',
    tcl = 'tcl',
    itk = 'tcl',
    itcl = 'tcl',
    tk = 'tcl',
    jacl = 'tcl',
    tl = 'teal',
    templ = 'templ',
    tmpl = 'template',
    tera = 'tera',
    ti = 'terminfo',
    dtx = 'tex',
    ltx = 'tex',
    bbl = 'tex',
    latex = 'tex',
    sty = 'tex',
    pgf = 'tex',
    nlo = 'tex',
    nls = 'tex',
    thm = 'tex',
    eps_tex = 'tex',
    pdf_tex = 'tex',
    pygtex = 'tex',
    pygstyle = 'tex',
    clo = 'tex',
    aux = 'tex',
    brf = 'tex',
    ind = 'tex',
    lof = 'tex',
    loe = 'tex',
    nav = 'tex',
    vrb = 'tex',
    ins = 'tex',
    tikz = 'tex',
    bbx = 'tex',
    cbx = 'tex',
    beamer = 'tex',
    cls = 'cls',
    texi = 'texinfo',
    txi = 'texinfo',
    texinfo = 'texinfo',
    text = 'text',
    tfvars = 'terraform-vars',
    thrift = 'thrift',
    tla = 'tla',
    tli = 'tli',
    toml = 'toml',
    tpp = 'tpp',
    treetop = 'treetop',
    trig = 'trig',
    slt = 'tsalt',
    tsscl = 'tsscl',
    tssgm = 'tssgm',
    tssop = 'tssop',
    tsv = 'tsv',
    tutor = 'tutor',
    twig = 'twig',
    ts = detect_line1('<%?xml', 'xml', 'typescript'),
    mts = 'typescript',
    cts = 'typescript',
    tsx = 'typescriptreact',
    tsp = 'typespec',
    uc = 'uc',
    uit = 'uil',
    uil = 'uil',
    ungram = 'ungrammar',
    u = 'unison',
    uu = 'unison',
    url = 'urlshortcut',
    usd = 'usd',
    usda = 'usd',
    v = 'v',
    vsh = 'v',
    vv = 'v',
    ctl = 'vb',
    dob = 'vb',
    dsm = 'vb',
    dsr = 'vb',
    pag = 'vb',
    sba = 'vb',
    vb = 'vb',
    vbs = 'vb',
    vba = 'vba',
    vdf = 'vdf',
    vdmpp = 'vdmpp',
    vpp = 'vdmpp',
    vdmrt = 'vdmrt',
    vdmsl = 'vdmsl',
    vdm = 'vdmsl',
    vto = 'vento',
    vr = 'vera',
    vri = 'vera',
    vrh = 'vera',
    va = 'verilogams',
    vams = 'verilogams',
    vhdl = 'vhdl',
    vst = 'vhdl',
    vhd = 'vhdl',
    hdl = 'vhdl',
    vho = 'vhdl',
    vbe = 'vhdl',
    tape = 'vhs',
    vim = 'vim',
    mar = 'vmasm',
    cm = 'voscm',
    wrl = 'vrml',
    vroom = 'vroom',
    vue = 'vue',
    wast = 'wat',
    wat = 'wat',
    wdl = 'wdl',
    wm = 'webmacro',
    wgsl = 'wgsl',
    wbt = 'winbatch',
    wit = 'wit',
    wml = 'wml',
    wsf = 'wsh',
    wsc = 'wsh',
    wsml = 'wsml',
    ad = 'xdefaults',
    xhtml = 'xhtml',
    xht = 'xhtml',
    msc = 'xmath',
    msf = 'xmath',
    psc1 = 'xml',
    tpm = 'xml',
    xliff = 'xml',
    atom = 'xml',
    xul = 'xml',
    cdxml = 'xml',
    mpd = 'xml',
    rss = 'xml',
    fsproj = 'xml',
    ui = 'xml',
    vbproj = 'xml',
    xlf = 'xml',
    wsdl = 'xml',
    csproj = 'xml',
    wpl = 'xml',
    xmi = 'xml',
    xpr = 'xml',
    xpfm = 'xml',
    spfm = 'xml',
    bxml = 'xml',
    mmi = 'xml',
    xcu = 'xml',
    xlb = 'xml',
    xlc = 'xml',
    xba = 'xml',
    slnx = 'xml',
    xpm = detect_line1('XPM2', 'xpm2', 'xpm'),
    xpm2 = 'xpm2',
    xqy = 'xquery',
    xqm = 'xquery',
    xquery = 'xquery',
    xq = 'xquery',
    xql = 'xquery',
    xs = 'xs',
    xsd = 'xsd',
    xsl = 'xslt',
    xslt = 'xslt',
    yy = 'yacc',
    ['y++'] = 'yacc',
    yxx = 'yacc',
    yml = 'yaml',
    yaml = 'yaml',
    eyaml = 'yaml',
    mplstyle = 'yaml',
    grc = detect_line1('<%?xml', 'xml', 'yaml'),
    yang = 'yang',
    yuck = 'yuck',
    z8a = 'z8a',
    zig = 'zig',
    zon = 'zig',
    ziggy = 'ziggy',
    ['ziggy-schema'] = 'ziggy_schema',
    zu = 'zimbu',
    zut = 'zimbutempl',
    zs = 'zserio',
    zsh = 'zsh',
    zunit = 'zsh',
    ['zsh-theme'] = 'zsh',
    vala = 'vala',
    web = 'web',
    pl = 'pl',
    pp = 'pp',
    i = 'i',
    w = 'progress_cweb',
    p = 'progress_pascal',
    pro = detect_seq('proto', 'idlang'),
    patch = 'patch',
    r = 'r',
    rdf = 'redif',
    rules = 'rules',
    sc = 'sc',
    scd = 'scd',
    tcsh = function(path, bufnr)
        return require('vim.filetype.detect').shell(path, M._getlines(bufnr), 'tcsh')
    end,
    sql = 'sql',
    zsql = 'sql',
    tex = 'tex',
    tf = 'tf',
    txt = 'txt',
    xml = 'xml',
    y = 'y',
    cmd = 'cmd',
    rul = 'rul',
    cpy = detect_line1('^##', 'python', 'cobol'),
    dsl = detect_line1('^%s*<!', 'dsl', 'structurizr'),
    smil = detect_line1('<%?%s*xml.*%?>', 'xml', 'smil'),
    smi = 'smi',
    install = 'install',
    pm = 'pm',
    me = 'me',
    reg = 'reg',
    ttl = 'ttl',
    rc = detect_rc,
    rch = detect_rc,
    class = 'class',
    sgml = 'sgml',
    sgm = 'sgml',
    t = detect_seq('nroff', 'perl', 'tads'),
    -- Ignored extensions
    bak = detect_noext,
    ['dpkg-bak'] = detect_noext,
    ['dpkg-dist'] = detect_noext,
    ['dpkg-old'] = detect_noext,
    ['dpkg-new'] = detect_noext,
    ['in'] = function(path, bufnr)
        if vim.fs.basename(path) ~= 'configure.in' then
            return detect_noext(path, bufnr)
        end
    end,
    new = detect_noext,
    old = detect_noext,
    orig = detect_noext,
    pacsave = detect_noext,
    pacnew = detect_noext,
    rpmsave = detect_noext,
    rmpnew = detect_noext,
    -- END EXTENSION
}

---@type vim.filetype.mapping
local filename = {
    -- BEGIN FILENAME
    ['a2psrc'] = 'a2ps',
    ['/etc/a2ps.cfg'] = 'a2ps',
    ['.a2psrc'] = 'a2ps',
    ['.asoundrc'] = 'alsaconf',
    ['/usr/share/alsa/alsa.conf'] = 'alsaconf',
    ['/etc/asound.conf'] = 'alsaconf',
    ['build.xml'] = 'ant',
    ['.htaccess'] = 'apache',
    APKBUILD = 'apkbuild',
    ['apt.conf'] = 'aptconf',
    ['/.aptitude/config'] = 'aptconf',
    ['=tagging-method'] = 'arch',
    ['.arch-inventory'] = 'arch',
    ['makefile.am'] = 'automake',
    ['Makefile.am'] = 'automake',
    ['GNUmakefile.am'] = 'automake',
    ['.bash_aliases'] = 'bash',
    ['.bash-aliases'] = 'bash',
    ['.bash_history'] = 'bash',
    ['.bash-history'] = 'bash',
    ['.bash_logout'] = 'bash',
    ['.bash-logout'] = 'bash',
    ['.bash_profile'] = 'bash',
    ['.bash-profile'] = 'bash',
    ['named.root'] = 'bindzone',
    WORKSPACE = 'bzl',
    ['WORKSPACE.bzlmod'] = 'bzl',
    BUCK = 'bzl',
    BUILD = 'bzl',
    ['cabal.project'] = 'cabalproject',
    ['cabal.config'] = 'cabalconfig',
    calendar = 'calendar',
    catalog = 'catalog',
    ['/etc/cdrdao.conf'] = 'cdrdaoconf',
    ['.cdrdao'] = 'cdrdaoconf',
    ['/etc/default/cdrdao'] = 'cdrdaoconf',
    ['/etc/defaults/cdrdao'] = 'cdrdaoconf',
    ['cfengine.conf'] = 'cfengine',
    cgdbrc = 'cgdbrc',
    ['init.trans'] = 'clojure',
    ['.trans'] = 'clojure',
    ['CMakeLists.txt'] = 'cmake',
    ['CMakeCache.txt'] = 'cmakecache',
    ['.cling_history'] = 'cpp',
    ['.alias'] = 'csh',
    ['.cshrc'] = 'csh',
    ['.login'] = 'csh',
    ['csh.cshrc'] = 'csh',
    ['csh.login'] = 'csh',
    ['csh.logout'] = 'csh',
    ['auto.master'] = 'conf',
    ['texdoc.cnf'] = 'conf',
    ['.x11vncrc'] = 'conf',
    ['.chktexrc'] = 'conf',
    ['.ripgreprc'] = 'conf',
    ripgreprc = 'conf',
    ['configure.in'] = 'config',
    ['configure.ac'] = 'config',
    crontab = 'crontab',
    ['.cvsrc'] = 'cvsrc',
    ['/debian/changelog'] = 'debchangelog',
    ['changelog.dch'] = 'debchangelog',
    ['changelog.Debian'] = 'debchangelog',
    ['NEWS.dch'] = 'debchangelog',
    ['NEWS.Debian'] = 'debchangelog',
    ['/debian/control'] = 'debcontrol',
    ['/DEBIAN/control'] = 'debcontrol',
    ['/debian/copyright'] = 'debcopyright',
    ['/etc/apt/sources.list'] = 'debsources',
    ['denyhosts.conf'] = 'denyhosts',
    ['dict.conf'] = 'dictconf',
    ['.dictrc'] = 'dictconf',
    ['/etc/DIR_COLORS'] = 'dircolors',
    ['.dir_colors'] = 'dircolors',
    ['.dircolors'] = 'dircolors',
    ['/etc/dnsmasq.conf'] = 'dnsmasq',
    Containerfile = 'dockerfile',
    dockerfile = 'dockerfile',
    Dockerfile = 'dockerfile',
    npmrc = 'dosini',
    ['/etc/yum.conf'] = 'dosini',
    ['.npmrc'] = 'dosini',
    ['pip.conf'] = 'dosini',
    ['setup.cfg'] = 'dosini',
    ['pudb.cfg'] = 'dosini',
    ['.coveragerc'] = 'dosini',
    ['.pypirc'] = 'dosini',
    ['.pylintrc'] = 'dosini',
    ['pylintrc'] = 'dosini',
    ['.replyrc'] = 'dosini',
    ['.gitlint'] = 'dosini',
    ['.oelint.cfg'] = 'dosini',
    ['psprint.conf'] = 'dosini',
    sofficerc = 'dosini',
    ['mimeapps.list'] = 'dosini',
    ['.wakatime.cfg'] = 'dosini',
    ['nfs.conf'] = 'dosini',
    ['nfsmount.conf'] = 'dosini',
    ['.notmuch-config'] = 'dosini',
    ['.alsoftrc'] = 'dosini',
    ['alsoft.conf'] = 'dosini',
    ['alsoft.ini'] = 'dosini',
    ['alsoftrc.sample'] = 'dosini',
    ['pacman.conf'] = 'confini',
    ['paru.conf'] = 'confini',
    ['mpv.conf'] = 'confini',
    dune = 'dune',
    jbuild = 'dune',
    ['dune-workspace'] = 'dune',
    ['dune-project'] = 'dune',
    ['dune-file'] = 'dune',
    Earthfile = 'earthfile',
    ['.editorconfig'] = 'editorconfig',
    ['elinks.conf'] = 'elinks',
    ['mix.lock'] = 'elixir',
    ['filter-rules'] = 'elmfilt',
    ['exim.conf'] = 'exim',
    exports = 'exports',
    fennelrc = 'fennel',
    ['.fennelrc'] = 'fennel',
    ['.fetchmailrc'] = 'fetchmail',
    fvSchemes = 'foam',
    fvSolution = 'foam',
    fvConstraints = 'foam',
    fvModels = 'foam',
    fstab = 'fstab',
    mtab = 'fstab',
    ['.gdbinit'] = 'gdb',
    gdbinit = 'gdb',
    ['.cuda-gdbinit'] = 'gdb',
    ['cuda-gdbinit'] = 'gdb',
    ['.gdbearlyinit'] = 'gdb',
    gdbearlyinit = 'gdb',
    ['lltxxxxx.txt'] = 'gedcom',
    TAG_EDITMSG = 'gitcommit',
    MERGE_MSG = 'gitcommit',
    COMMIT_EDITMSG = 'gitcommit',
    NOTES_EDITMSG = 'gitcommit',
    EDIT_DESCRIPTION = 'gitcommit',
    ['.gitconfig'] = 'gitconfig',
    ['.gitmodules'] = 'gitconfig',
    ['.gitattributes'] = 'gitattributes',
    ['.gitignore'] = 'gitignore',
    ['.ignore'] = 'gitignore',
    ['.containerignore'] = 'gitignore',
    ['.dockerignore'] = 'gitignore',
    ['.fdignore'] = 'gitignore',
    ['.npmignore'] = 'gitignore',
    ['.rgignore'] = 'gitignore',
    ['.vscodeignore'] = 'gitignore',
    ['gitolite.conf'] = 'gitolite',
    ['git-rebase-todo'] = 'gitrebase',
    gkrellmrc = 'gkrellmrc',
    ['.gnashrc'] = 'gnash',
    ['.gnashpluginrc'] = 'gnash',
    gnashpluginrc = 'gnash',
    gnashrc = 'gnash',
    ['.gnuplot_history'] = 'gnuplot',
    ['goaccess.conf'] = 'goaccess',
    ['go.sum'] = 'gosum',
    ['go.work.sum'] = 'gosum',
    ['go.work'] = 'gowork',
    ['.gprc'] = 'gp',
    ['/.gnupg/gpg.conf'] = 'gpg',
    ['/.gnupg/options'] = 'gpg',
    Jenkinsfile = 'groovy',
    ['/var/backups/gshadow.bak'] = 'group',
    ['/etc/gshadow'] = 'group',
    ['/etc/group-'] = 'group',
    ['/etc/gshadow.edit'] = 'group',
    ['/etc/gshadow-'] = 'group',
    ['/etc/group'] = 'group',
    ['/var/backups/group.bak'] = 'group',
    ['/etc/group.edit'] = 'group',
    ['/boot/grub/menu.lst'] = 'grub',
    ['/etc/grub.conf'] = 'grub',
    ['/boot/grub/grub.conf'] = 'grub',
    ['.gtkrc'] = 'gtkrc',
    gtkrc = 'gtkrc',
    ['snort.conf'] = 'hog',
    ['vision.conf'] = 'hog',
    ['/etc/host.conf'] = 'hostconf',
    ['/etc/hosts.allow'] = 'hostsaccess',
    ['/etc/hosts.deny'] = 'hostsaccess',
    ['.hy-history'] = 'hy',
    ['hyprland.conf'] = 'hyprlang',
    ['hyprpaper.conf'] = 'hyprlang',
    ['hypridle.conf'] = 'hyprlang',
    ['hyprlock.conf'] = 'hyprlang',
    ['/.icewm/menu'] = 'icemenu',
    ['.indent.pro'] = 'indent',
    indentrc = 'indent',
    inittab = 'inittab',
    ['ipf.conf'] = 'ipfilter',
    ['ipf6.conf'] = 'ipfilter',
    ['ipf.rules'] = 'ipfilter',
    ['.bun_repl_history'] = 'javascript',
    ['.node_repl_history'] = 'javascript',
    ['deno_history.txt'] = 'javascript',
    ['Pipfile.lock'] = 'json',
    ['.firebaserc'] = 'json',
    ['.prettierrc'] = 'json',
    ['.stylelintrc'] = 'json',
    ['.lintstagedrc'] = 'json',
    ['deno.lock'] = 'json',
    ['flake.lock'] = 'json',
    ['.swcrc'] = 'json',
    ['.babelrc'] = 'jsonc',
    ['.eslintrc'] = 'jsonc',
    ['.hintrc'] = 'jsonc',
    ['.jscsrc'] = 'jsonc',
    ['.jsfmtrc'] = 'jsonc',
    ['.jshintrc'] = 'jsonc',
    ['.luaurc'] = 'jsonc',
    ['.swrc'] = 'jsonc',
    ['.vsconfig'] = 'jsonc',
    ['bun.lock'] = 'jsonc',
    ['.justfile'] = 'just',
    ['.Justfile'] = 'just',
    ['.JUSTFILE'] = 'just',
    ['justfile'] = 'just',
    ['Justfile'] = 'just',
    ['JUSTFILE'] = 'just',
    Kconfig = 'kconfig',
    ['Kconfig.debug'] = 'kconfig',
    ['Config.in'] = 'kconfig',
    ['ldaprc'] = 'ldapconf',
    ['.ldaprc'] = 'ldapconf',
    ['ldap.conf'] = 'ldapconf',
    ['lfrc'] = 'lf',
    ['lftp.conf'] = 'lftp',
    ['.lftprc'] = 'lftp',
    ['/.libao'] = 'libao',
    ['/etc/libao.conf'] = 'libao',
    ['lilo.conf'] = 'lilo',
    ['/etc/limits'] = 'limits',
    ['.emacs'] = 'lisp',
    sbclrc = 'lisp',
    ['.sbclrc'] = 'lisp',
    ['.sawfishrc'] = 'lisp',
    ['/etc/login.access'] = 'loginaccess',
    ['/etc/login.defs'] = 'logindefs',
    ['.lsl'] = 'lsl',
    ['.busted'] = 'lua',
    ['.luacheckrc'] = 'lua',
    ['.lua_history'] = 'lua',
    ['config.ld'] = 'lua',
    ['rock_manifest'] = 'lua',
    ['lynx.cfg'] = 'lynx',
    ['m3overrides'] = 'm3build',
    ['m3makefile'] = 'm3build',
    ['cm3.cfg'] = 'm3quake',
    ['.m4_history'] = 'm4',
    ['.followup'] = 'mail',
    ['.article'] = 'mail',
    ['.letter'] = 'mail',
    ['/etc/aliases'] = 'mailaliases',
    ['/etc/mail/aliases'] = 'mailaliases',
    mailcap = 'mailcap',
    ['.mailcap'] = 'mailcap',
    Kbuild = 'make',
    ['/etc/man.conf'] = 'manconf',
    ['man.config'] = 'manconf',
    ['maxima-init.mac'] = 'maxima',
    isyncrc = 'mbsync',
    ['meson.build'] = 'meson',
    ['meson.options'] = 'meson',
    ['meson_options.txt'] = 'meson',
    ['/etc/conf.modules'] = 'modconf',
    ['/etc/modules'] = 'modconf',
    ['/etc/modules.conf'] = 'modconf',
    ['/.mplayer/config'] = 'mplayerconf',
    ['mplayer.conf'] = 'mplayerconf',
    mrxvtrc = 'mrxvtrc',
    ['.mrxvtrc'] = 'mrxvtrc',
    ['.msmtprc'] = 'msmtp',
    ['Muttngrc'] = 'muttrc',
    ['Muttrc'] = 'muttrc',
    ['.mysql_history'] = 'mysql',
    ['/etc/nanorc'] = 'nanorc',
    Neomuttrc = 'neomuttrc',
    ['.netrc'] = 'netrc',
    NEWS = 'news',
    ['.ocamlinit'] = 'ocaml',
    ['.octaverc'] = 'octave',
    octaverc = 'octave',
    ['octave.conf'] = 'octave',
    ['.ondirrc'] = 'ondir',
    opam = 'opam',
    ['opam.locked'] = 'opam',
    ['/etc/pam.conf'] = 'pamconf',
    ['pam_env.conf'] = 'pamenv',
    ['.pam_environment'] = 'pamenv',
    ['/var/backups/passwd.bak'] = 'passwd',
    ['/var/backups/shadow.bak'] = 'passwd',
    ['/etc/passwd'] = 'passwd',
    ['/etc/passwd-'] = 'passwd',
    ['/etc/shadow.edit'] = 'passwd',
    ['/etc/shadow-'] = 'passwd',
    ['/etc/shadow'] = 'passwd',
    ['/etc/passwd.edit'] = 'passwd',
    ['.gitolite.rc'] = 'perl',
    ['gitolite.rc'] = 'perl',
    ['example.gitolite.rc'] = 'perl',
    ['latexmkrc'] = 'perl',
    ['.latexmkrc'] = 'perl',
    ['pf.conf'] = 'pf',
    ['main.cf'] = 'pfmain',
    ['main.cf.proto'] = 'pfmain',
    pinerc = 'pine',
    ['.pinercex'] = 'pine',
    ['.pinerc'] = 'pine',
    pinercex = 'pine',
    ['/etc/pinforc'] = 'pinfo',
    ['/.pinforc'] = 'pinfo',
    ['.povrayrc'] = 'povini',
    printcap = function(_path, _bufnr)
        return 'ptcap', function(b)
            vim.b[b].ptcap_type = 'print'
        end
    end,
    termcap = function(_path, _bufnr)
        return 'ptcap', function(b)
            vim.b[b].ptcap_type = 'term'
        end
    end,
    ['.procmailrc'] = 'procmail',
    ['.procmail'] = 'procmail',
    ['indent.pro'] = detect_seq('proto', 'indent'),
    ['/etc/protocols'] = 'protocols',
    INDEX = 'psf',
    INFO = 'psf',
    ['MANIFEST.in'] = 'pymanifest',
    ['.pythonstartup'] = 'python',
    ['.pythonrc'] = 'python',
    ['.python_history'] = 'python',
    ['.jline-jython.history'] = 'python',
    SConstruct = 'python',
    qmldir = 'qmldir',
    ['.Rhistory'] = 'r',
    ['.Rprofile'] = 'r',
    Rprofile = 'r',
    ['Rprofile.site'] = 'r',
    ratpoisonrc = 'ratpoison',
    ['.ratpoisonrc'] = 'ratpoison',
    inputrc = 'readline',
    ['.inputrc'] = 'readline',
    ['.reminders'] = 'remind',
    ['requirements.txt'] = 'requirements',
    ['constraints.txt'] = 'requirements',
    ['requirements.in'] = 'requirements',
    ['resolv.conf'] = 'resolv',
    ['robots.txt'] = 'robots',
    Gemfile = 'ruby',
    Puppetfile = 'ruby',
    ['.irbrc'] = 'ruby',
    irbrc = 'ruby',
    ['.irb_history'] = 'ruby',
    irb_history = 'ruby',
    ['rakefile'] = 'ruby',
    ['Rakefile'] = 'ruby',
    ['rantfile'] = 'ruby',
    ['Rantfile'] = 'ruby',
    Vagrantfile = 'ruby',
    ['smb.conf'] = 'samba',
    ['.lips_repl_history'] = 'scheme',
    ['.guile'] = 'scheme',
    screenrc = 'screen',
    ['.screenrc'] = 'screen',
    ['/etc/sensors3.conf'] = 'sensors',
    ['/etc/sensors.conf'] = 'sensors',
    ['/etc/services'] = 'services',
    ['/etc/serial.conf'] = 'setserial',
    ['/etc/udev/cdsymlinks.conf'] = 'sh',
    ['.ash_history'] = 'sh',
    ['.devscripts'] = 'sh',
    ['devscripts.conf'] = 'sh',
    ['makepkg.conf'] = 'sh',
    ['.makepkg.conf'] = 'sh',
    ['user-dirs.dirs'] = 'sh',
    ['user-dirs.defaults'] = 'sh',
    ['.xprofile'] = 'sh',
    ['bash.bashrc'] = 'bash',
    bashrc = 'bash',
    ['.bashrc'] = 'bash',
    ['.kshrc'] = 'ksh',
    ['.profile'] = 'sh',
    ['/etc/profile'] = 'sh',
    PKGBUILD = 'bash',
    ['.tcshrc'] = 'tcsh',
    ['tcsh.login'] = 'tcsh',
    ['tcsh.tcshrc'] = 'tcsh',
    ['/etc/slp.conf'] = 'slpconf',
    ['/etc/slp.reg'] = 'slpreg',
    ['/etc/slp.spi'] = 'slpspi',
    ['.slrnrc'] = 'slrnrc',
    ['sendmail.cf'] = 'sm',
    Snakefile = 'snakemake',
    ['.sqlite_history'] = 'sql',
    ['squid.conf'] = 'squid',
    ['ssh_config'] = 'sshconfig',
    ['sshd_config'] = 'sshdconfig',
    ['/etc/sudoers'] = 'sudoers',
    ['sudoers.tmp'] = 'sudoers',
    ['/etc/sysctl.conf'] = 'sysctl',
    tags = 'tags',
    ['pending.data'] = 'taskdata',
    ['completed.data'] = 'taskdata',
    ['undo.data'] = 'taskdata',
    ['.tclshrc'] = 'tcl',
    ['.wishrc'] = 'tcl',
    ['.tclsh-history'] = 'tcl',
    ['tclsh.rc'] = 'tcl',
    ['.xsctcmdhistory'] = 'tcl',
    ['.xsdbcmdhistory'] = 'tcl',
    ['texmf.cnf'] = 'texmf',
    COPYING = 'text',
    README = detect_seq('haredoc', 'text'),
    LICENSE = 'text',
    AUTHORS = 'text',
    tfrc = 'tf',
    ['.tfrc'] = 'tf',
    ['tidy.conf'] = 'tidy',
    tidyrc = 'tidy',
    ['.tidyrc'] = 'tidy',
    ['.tmux.conf'] = 'tmux',
    ['Cargo.lock'] = 'toml',
    ['/.cargo/config'] = 'toml',
    ['/.cargo/credentials'] = 'toml',
    Pipfile = 'toml',
    ['Gopkg.lock'] = 'toml',
    ['uv.lock'] = 'toml',
    ['.black'] = 'toml',
    black = detect_line1('tool%.black', 'toml', nil),
    ['trustees.conf'] = 'trustees',
    ['.ts_node_repl_history'] = 'typescript',
    ['/etc/udev/udev.conf'] = 'udevconf',
    ['/etc/updatedb.conf'] = 'updatedb',
    ['fdrupstream.log'] = 'upstreamlog',
    vgrindefs = 'vgrindefs',
    ['.exrc'] = 'vim',
    ['_exrc'] = 'vim',
    ['.netrwhist'] = 'vim',
    ['_viminfo'] = 'viminfo',
    ['.viminfo'] = 'viminfo',
    ['.wgetrc'] = 'wget',
    ['.wget2rc'] = 'wget2',
    wgetrc = 'wget',
    wget2rc = 'wget2',
    ['.wvdialrc'] = 'wvdial',
    ['wvdial.conf'] = 'wvdial',
    ['.XCompose'] = 'xcompose',
    ['Compose'] = 'xcompose',
    ['.Xresources'] = 'xdefaults',
    ['.Xpdefaults'] = 'xdefaults',
    ['xdm-config'] = 'xdefaults',
    ['.Xdefaults'] = 'xdefaults',
    ['xorg.conf'] = 'xfree86_v4',
    ['xorg.conf-4'] = 'xfree86_v4',
    ['XF86Config'] = 'xfree86_v3',
    ['/etc/xinetd.conf'] = 'xinetd',
    fglrxrc = 'xml',
    ['/etc/blkid.tab'] = 'xml',
    ['/etc/blkid.tab.old'] = 'xml',
    ['fonts.conf'] = 'xml',
    ['Directory.Packages.props'] = 'xml',
    ['Directory.Build.props'] = 'xml',
    ['Directory.Build.targets'] = 'xml',
    ['.clangd'] = 'yaml',
    ['.clang-format'] = 'yaml',
    ['.clang-tidy'] = 'yaml',
    ['pixi.lock'] = 'yaml',
    ['yarn.lock'] = 'yaml',
    matplotlibrc = 'yaml',
    ['.condarc'] = 'yaml',
    condarc = 'yaml',
    zathurarc = 'zathurarc',
    ['/etc/zprofile'] = 'zsh',
    ['.zlogin'] = 'zsh',
    ['.zlogout'] = 'zsh',
    ['.zshrc'] = 'zsh',
    ['.zprofile'] = 'zsh',
    ['.zcompdump'] = 'zsh',
    ['.zsh_history'] = 'zsh',
    ['.zshenv'] = 'zsh',
    ['.zfbfmarks'] = 'zsh',
    -- END FILENAME
}

---@param ext string
---@return string
local function quick_match(ext)
    ext = ext:lower()
    return extension[ext] or filename[ext] or ''
end

return {
    quick_match = quick_match,
}
